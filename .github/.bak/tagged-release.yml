name: "tagged-release"

on:
  push:
    tags:
      - "v*"

jobs:
  windows-release-build:
    runs-on: windows-latest
    steps:
      - name: Check-out repository
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.12.6'
          cache: 'pip'

      - name: Install Dependencies
        run: pip install -r requirements.txt

      - name: Run Test
        run: python TONSign_Classic_or_Special_yky.py
      
      # Build python script into a stand-alone exe
      - name: Build Executable
        uses: Nuitka/Nuitka-Action@main
        with:
          nuitka-version: main
          script-name: TONSign_Classic_or_Special_yky.py
          standalone: true

      - name: Copy Files
        run: |
          Copy-Item -Path "Language" -Destination "build/TONSign_Classic_or_Special_yky.dist" -Recurse
          Copy-Item -Path "*.Ink" -Destination "build/TONSign_Classic_or_Special_yky.dist"

      - name: Create Archive
        uses: thedoctor0/zip-release@0.7.6
        with:
          type: 'zip'
          filename: 'TONSign-Classic-or-Special-yky.zip'
          #          filename: 'TONSign-Classic-or-Special-yky-windows.zip'
          exclusions: '*.git* /*node_modules/* .editorconfig'
          directory: build/TONSign_Classic_or_Special_yky.dist

      - name: Upload build artifact
        uses: actions/upload-artifact@v4
        with:
          name: release-windows
          path: build/TONSign_Classic_or_Special_yky.dist/TONSign-Classic-or-Special-yky.zip
  #          path: build/TONSign_Classic_or_Special_yky.dist/TONSign-Classic-or-Special-yky-windows.zip
  
  asset-release-build:
    runs-on: ubuntu-latest
    steps:
      - name: Check-out repository
        uses: actions/checkout@v4

      - name: Create Archive
        uses: thedoctor0/zip-release@0.7.6
        with:
          type: 'zip'
          filename: 'TONSignAsset.zip'
          exclusions: '*.git* /*node_modules/* .editorconfig *.idea* *.github* *.vscode* /*Exe/* /*Language/* /*Screenshot/* .gitignore LICENSE *.md *.txt *.code-workspace *.py'

      - name: Upload build artifact
        uses: actions/upload-artifact@v4
        with:
          name: release-asset
          path: TONSignAsset.zip
  
  tagged-release:
    name: "Tagged Release"
    needs: [ windows-release-build, asset-release-build ]
    runs-on: "ubuntu-latest"
    steps:
      - name: Download build artifacts
        uses: actions/download-artifact@v4

      - name: Create Release
        uses: marvinpinto/action-automatic-releases@latest
        with:
          repo_token: "${{ secrets.GITHUB_TOKEN }}"
          prerelease: false
          files: |
            release-windows/TONSign-Classic-or-Special-yky.zip
            release-asset/TONSignAsset.zip
#          files: |
#            release-linux/TONSign-Classic-or-Special-yky-linux.zip
#            release-windows/TONSign-Classic-or-Special-yky-windows.zip
#            release-macos/TONSign-Classic-or-Special-yky-macos.zip
#            release-asset/TONSignAsset.zip