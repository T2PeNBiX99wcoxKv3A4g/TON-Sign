name: Pre Release

on:
  push:
    branches:
      - fast

jobs:
  windows-release-build:
    name: Windows Latest Build
    runs-on: windows-latest
    steps:
      - name: Check-out repository
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.12.6'
          cache: 'pip'

      - name: Install Dependencies
        run: pip install -r requirements.txt

      - name: Run Test
        run: python TONSign_Classic_or_Special_yky.py --test

      # Build python script into a stand-alone exe
      - name: Build Executable
        uses: Nuitka/Nuitka-Action@main
        with:
          nuitka-version: main
          script-name: TONSign_Classic_or_Special_yky.py
          standalone: true

      - name: Copy Language Folder
        run: Copy-Item -Path "Language" -Destination "build/TONSign_Classic_or_Special_yky.dist" -Recurse

      - name: Copy Link Files
        run: Copy-Item -Path "*.lnk" -Destination "build/TONSign_Classic_or_Special_yky.dist"

      - name: Create Archive
        uses: thedoctor0/zip-release@0.7.6
        with:
          type: 'zip'
          filename: 'TONSign-Classic-or-Special-yky.zip'
          exclusions: '*.git* /*node_modules/* .editorconfig'
          directory: build/TONSign_Classic_or_Special_yky.dist

      - name: Upload Build Artifact
        uses: actions/upload-artifact@v4
        with:
          name: release-windows
          path: build/TONSign_Classic_or_Special_yky.dist/TONSign-Classic-or-Special-yky.zip

  asset-packaging:
    name: Asset Packaging
    runs-on: ubuntu-latest
    steps:
      - name: Check-out Repository
        uses: actions/checkout@v4

      - name: Create Archive
        uses: thedoctor0/zip-release@0.7.6
        with:
          type: 'zip'
          filename: 'TONSignAsset.zip'
          exclusions: '*.git* /*node_modules/* .editorconfig *.idea* *.github* *.vscode* /*Exe/* /*Language/* /*Screenshot/* .gitignore LICENSE *.md *.txt *.code-workspace *.py *.lnk'

      - name: Upload Build Artifact
        uses: actions/upload-artifact@v4
        with:
          name: release-asset
          path: TONSignAsset.zip
  
  deploy:
    name: Create Pre Release
    needs: [ windows-release-build, asset-packaging ]
    runs-on: ubuntu-latest
    steps:
      - name: Download Build Artifacts
        uses: actions/download-artifact@v4

      - name: Bump version and push tag
        id: tag_version
        uses: mathieudutour/github-tag-action@v6.2
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          pre_release_branches: "fast"
          custom_release_rules: "fix:prerelease,feat:prerelease"
#          default_prerelease_bump: "preminor"
#          default_bump: "minor"
#          append_to_pre_release_tag: "fast"

      - name: Create Release
        uses: ncipollo/release-action@v1
        with:
          artifacts: "release-windows/TONSign-Classic-or-Special-yky.zip,release-asset/TONSignAsset.zip"
          token: ${{ secrets.GITHUB_TOKEN }}
          tag: ${{ steps.tag_version.outputs.new_tag }}
          name: Pre Release ${{ steps.tag_version.outputs.new_tag }}
          body: ${{ steps.tag_version.outputs.changelog }}
          prerelease: true
#          generateReleaseNotes: true